<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.cloud</groupId>
    <artifactId>eureka</artifactId>
    <version>1.0</version>
    <name>eureka</name>
    <description>Demo project for Spring Cloud Eureka</description>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Hoxton.SR7</spring-cloud.version>
        <!--项目名 -->
        <docker.image.prefix>eureka-demo</docker.image.prefix>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.10</version>
				<executions>
					<execution>
					<id>default</id>
					<goals>
					<!--如果package时不想用docker打包,就注释掉这个goal-->
					<goal>build</goal>
					<goal>push</goal>
					</goals>
					</execution>
				</executions>
				<configuration>
                    <!-- 上下文路径配置，此处设置为项目根路径 用来读取Dockerfile-->
                    <contextDirectory>${project.basedir}</contextDirectory>
<!--                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
                    <!--上传路径/镜像构建名： 私服地址/私服项目名/springboot项目名-->
                    <repository>${project.artifactId}</repository>
                    <!-- 标记 -->
                    <tag>${project.version}</tag>
                     <!--作为Dockerfile文件传入-->
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
				</configuration>
			</plugin>
        </plugins>
    </build>

</project>
